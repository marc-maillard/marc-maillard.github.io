{"version":3,"sources":["components/freePassButton.jsx","components/sickButton.jsx","components/extraChallengeButton.jsx","components/mandatoryChallengeButton.jsx","components/recalledChallengeButton.jsx","components/scoreBadge.jsx","components/day.jsx","components/calendar.jsx","components/user.jsx","components/users.jsx","App.js","serviceWorker.js","index.js","components/calendar.module.css","components/freePassButton.module.css","components/sickButton.module.css","components/extraChallengeButton.module.css","components/mandatoryChallengeButton.module.css","components/recalledChallengeButton.module.css"],"names":["FreePassButton","_this","this","toggleState","props","freePass","classes","getClasses","react_default","a","createElement","onClick","onToggleFreePass","className","styles","btn","btn_secondary","Component","SickButton","sick","onToggleSick","ExtraChallengeButton","extraChallenge","onToggleExtraChallenge","MandatoryChallengeButton","mandatoryChallenge","onToggleMandatoryChallenge","RecalledChallengeButton","recalledChallenge","onToggleRecalledChallenge","Score","scoreLabel","score","Day","HandleToggleFreePass","newPropertyState","console","log","newState","Object","objectSpread","day","UpdateState","HandleToggleMandatoryChallenge","HandleToggleSick","HandleToggleExtraChallenge","HandleToggleRecalledChallenge","redStrokesExist","newScore","ComputedDailyScore","dailyScore","OnDayUpdate","date","mandatoryChallengeButton","extraChallengeButton","recalledChallengeButton","sickButton","freePassButton","scoreBadge","Calendar","state","currentMonth","Date","selectedDate","onDateClick","setState","onNavigateTo","nextMonth","dateFns","addMonths","prevMonth","subMonths","header","row","join","col","icon","format","days","startDate","startOfISOWeek","i","push","key","addDays","monthStart","cell","classFromScoreType","getClassFromScoreType","isSameMonth","isAfter","isBefore","endDate","disabled","isSameDay","selected","calendar_empty","formattedDate","GetDateString","filteredDaysFromProp","filter","dayItem","length","dayFromProp","calender_freePass","calender_sick","calender_recalledChallenge","calender_mandatoryXtraChallenge","calender_failedChallenge","shortDate","getTime","getTimezoneOffset","toISOString","split","_this2","_this$state","startOfMonth","monthEnd","endOfMonth","endOfISOWeek","rows","_loop","cloneDay","getCellClasses","parse","number","bg","body","calendar","renderHeader","renderDays","renderCells","User","classCallCheck","_super","call","HandleDailyScoreUpdate","HandleDayUpdate","updatedDay","dateToDisplay","user","some","axios","post","process","_id","then","res","toConsumableArray","findIndex","CalculateTotalScore","data","concat","HandleNavigateTo","dayToDisplay","GetDay","HandleCalendarClassnames","tile","view","name","defaultDay","GetToday","userName","get","response","RemoveUnnecessaryData","catch","err","newUser","day_id","necessaryDays","NumberOfRedStrokes","millisecondsSinceBeginning","_step","NumberOfRedStrokesUntilYesterday","countMaxNumberOfRedStrokesUntilYesterday","_iterator","_createForOfIteratorHelper","s","n","done","value","e","f","reduce","present","next","today","dateString","href","type","style","width","components_day","OnDailyScoreUpdate","CountRedStrokesUntilYesterday","CountFreePassUsed","CountSickDays","Users","users","inputValue","handleChange","event","target","handleSubmit","preventDefault","history","handleUserClicked","existingUsers","map","totalScore","redStrokes","sort","b","GetTodayAsString","todayAsString","users_createForOfIteratorHelper","arrayIndex","arrayLength","_this3","index","GetPlaceIcon","onSubmit","onChange","withRouter","App","specificUser","path","components_user","match","params","react_router_dom","react_router","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","logo","row-middle","col-start","col-center","col-end"],"mappings":"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","file":"static/js/main.f068ec2d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"./freePassButton.module.css\";\n\nclass FreePassButton extends Component {\n  render() {\n    const toggleState = this.props.freePass;\n    let classes = this.getClasses(toggleState);\n    return (\n      <div\n        onClick={() => this.props.onToggleFreePass(!toggleState)}\n        className={classes}\n      >\n        <span className=\"display-4\">Free Pass</span>\n      </div>\n    );\n  }\n\n  getClasses(toggleState) {\n    // console.log(\"this.props.freePass \", toggleState);\n    let classes = \"white mb-1 \";\n    classes += toggleState ? styles.btn : styles.btn_secondary;\n    // console.log(\"classes: \", classes);\n    return classes;\n  }\n}\n\nexport default FreePassButton;\n","import React, { Component } from \"react\";\nimport styles from \"./sickButton.module.css\";\n\nclass SickButton extends Component {\n    render() {\n        const toggleState = this.props.sick;\n        let classes = this.getClasses(toggleState);\n        return (\n            <div\n                onClick={() => this.props.onToggleSick(!toggleState)}\n                className={classes}\n            >\n                <span className=\"display-4\">Sick leave</span>\n            </div>\n        );\n    }\n\n    getClasses(toggleState) {\n        // console.log(\"this.props.sick \", toggleState);\n        let classes = \"white mb-1 \";\n        classes += toggleState ? styles.btn : styles.btn_secondary;\n        // console.log(\"classes: \", classes);\n        return classes;\n    }\n}\n\nexport default SickButton;\n","import React, { Component } from \"react\";\nimport styles from \"./extraChallengeButton.module.css\";\n\nclass ExtraChallengeButton extends Component {\n    render() {\n        const toggleState = this.props.extraChallenge;\n        let classes = this.getClasses(toggleState);\n        return (\n            <div\n                onClick={() => this.props.onToggleExtraChallenge(!toggleState)}\n                className={classes}\n            >\n                <span className=\"display-4\">Xtra</span>\n            </div>\n        );\n    }\n\n    getClasses(toggleState) {\n        let classes = \"white mb-1 \";\n        classes += toggleState ? styles.btn : styles.btn_secondary;\n        return classes;\n    }\n}\n\nexport default ExtraChallengeButton;\n","import React, { Component } from \"react\";\nimport styles from \"./mandatoryChallengeButton.module.css\";\n\nclass MandatoryChallengeButton extends Component {\n    render() {\n        const toggleState = this.props.mandatoryChallenge;\n        let classes = this.getClasses(toggleState);\n        return (\n            <div\n                onClick={() => this.props.onToggleMandatoryChallenge(!toggleState)}\n                className={classes}\n            >\n                <span className=\"display-4\">30'</span>\n            </div>\n        );\n    }\n\n    getClasses(toggleState) {\n        let classes = \"white mb-1 \";\n        classes += toggleState ? styles.btn : styles.btn_secondary;\n        return classes;\n    }\n}\n\nexport default MandatoryChallengeButton;\n","import React, { Component } from \"react\";\nimport styles from \"./recalledChallengeButton.module.css\";\n\nclass RecalledChallengeButton extends Component {\n    render() {\n        const toggleState = this.props.recalledChallenge;\n        let classes = this.getClasses(toggleState);\n        return (\n            <div\n                onClick={() => this.props.onToggleRecalledChallenge(!toggleState)}\n                className={classes}\n            >\n                <span className=\"display-4\">60'</span>\n            </div>\n        );\n    }\n\n    getClasses(toggleState) {\n        let classes = \"white mb-1 \";\n        classes += toggleState ? styles.btn : styles.btn_secondary;\n        return classes;\n    }\n}\n\nexport default RecalledChallengeButton;\n","import React, { Component } from \"react\";\n\nclass Score extends Component {\n  render() {\n    // console.log(\"score:\", this.props.score);\n    return (\n      <div className=\"badge badge-secondary\">\n        {this.props.scoreLabel}{\" \"}\n        <span className=\"badge badge-light\">{this.props.score}</span>\n      </div>\n    );\n  }\n}\n\nexport default Score;\n","import React, { Component } from \"react\";\nimport FreePassButton from \"./freePassButton\";\nimport SickButton from \"./sickButton\";\nimport ExtraChallengeButton from \"./extraChallengeButton\";\nimport MandatoryChallengeButton from \"./mandatoryChallengeButton\";\nimport RecalledChallengeButton from \"./recalledChallengeButton\";\nimport ScoreLabel from \"./scoreBadge\";\n\nclass Day extends Component {\n  HandleToggleFreePass = newPropertyState => {\n    console.log(\"new Free Pass State: \", newPropertyState);\n    const newState = { ...this.props.day };\n    newState.freePass = newPropertyState;\n\n    if (newPropertyState) {\n      newState.mandatoryChallenge = false;\n      newState.sick = false;\n      newState.extraChallenge = false;\n      newState.recalledChallenge = false;\n    }\n\n    this.UpdateState(newState);\n  };\n\n  HandleToggleMandatoryChallenge = newPropertyState => {\n    console.log(\"new MandatoryChallenge State: \", newPropertyState);\n\n    const newState = { ...this.props.day };\n    newState.mandatoryChallenge = newPropertyState;\n\n    if (newPropertyState) {\n      newState.sick = false;\n      newState.freePass = false;\n    } else {\n      newState.recalledChallenge = false;\n    }\n\n    this.UpdateState(newState);\n  };\n\n  HandleToggleSick = newPropertyState => {\n    console.log(\"new Sick State: \", newPropertyState);\n\n    const newState = { ...this.props.day };\n    newState.sick = newPropertyState;\n\n    if (newPropertyState) {\n      newState.mandatoryChallenge = false;\n      newState.freePass = false;\n      newState.extraChallenge = false;\n      newState.recalledChallenge = false;\n    }\n\n    this.UpdateState(newState);\n  };\n\n  HandleToggleExtraChallenge = newPropertyState => {\n    console.log(\"new ExtraChallenge State: \", newPropertyState);\n\n    const newState = { ...this.props.day };\n    newState.extraChallenge = newPropertyState;\n\n    if (newPropertyState) {\n      newState.sick = false;\n      newState.freePass = false;\n    } else {\n      newState.recalledChallenge = false;\n    }\n    this.UpdateState(newState);\n  };\n\n  HandleToggleRecalledChallenge = newPropertyState => {\n    console.log(\"new RecalledChallenge State: \", newPropertyState);\n\n    const newState = { ...this.props.day };\n\n    if (!this.props.day.mandatoryChallenge || !this.props.day.extraChallenge || !this.props.redStrokesExist) {\n      newPropertyState = false;\n    }\n    newState.recalledChallenge = newPropertyState;\n\n    if (newPropertyState) {\n      newState.sick = false;\n      newState.freePass = false;\n    }\n    this.UpdateState(newState);\n  };\n\n  UpdateState(newState) {\n    const newScore = this.ComputedDailyScore(newState);\n    newState.dailyScore = newScore;\n    this.props.OnDayUpdate(newState);\n  }\n\n  ComputedDailyScore(newState) {\n    let newScore = 0;\n\n    if (newState.sick) {\n      return 2;\n    }\n\n    if (newState.freePass) {\n      return 2;\n    }\n\n    if (newState.mandatoryChallenge) {\n      newScore += 1;\n    }\n    if (newState.extraChallenge) {\n      newScore += 1;\n    }\n    if (newState.recalledChallenge) {\n      newScore += 1;\n    }\n\n    return newScore;\n  }\n\n  render() {\n    return (\n      <span>\n        <div className=\"row\">\n          <div className=\"col d-flex justify-content-center\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"row mb-3\">\n                  <div className=\"col\">\n                    <span className=\"display-4\">{this.props.day.date}</span>\n                  </div>\n                </div>\n                <div className=\"row mb-3\">\n                  <div className=\"col-sm \">\n                    <MandatoryChallengeButton\n                      onToggleMandatoryChallenge={\n                        this.HandleToggleMandatoryChallenge\n                      }\n                      mandatoryChallenge={this.props.day.mandatoryChallenge}\n                    />\n                  </div>\n                  <div className=\"col-sm\">\n                    <ExtraChallengeButton\n                      onToggleExtraChallenge={this.HandleToggleExtraChallenge}\n                      extraChallenge={this.props.day.extraChallenge}\n                    />\n                  </div>\n                  <div className=\"col-sm\">\n                    <RecalledChallengeButton\n                      onToggleRecalledChallenge={\n                        this.HandleToggleRecalledChallenge\n                      }\n                      recalledChallenge={this.props.day.recalledChallenge}\n                    />\n                  </div>\n                </div>\n                <div className=\"row mb-3\">\n                  <div className=\"col-sm\">\n                    <SickButton\n                      onToggleSick={this.HandleToggleSick}\n                      sick={this.props.day.sick}\n                    />\n                  </div>\n                </div>\n                <div className=\"row mb-3\">\n                  <div className=\"col-sm\">\n                    <FreePassButton\n                      onToggleFreePass={this.HandleToggleFreePass}\n                      freePass={this.props.day.freePass}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"row mb-3\">\n                <div className=\"col\">\n                  <ScoreLabel\n                    scoreLabel={\"Daily score\"}\n                    score={this.props.day.dailyScore}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </span>\n    );\n  }\n}\n\nexport default Day;\n","import React, { Component } from \"react\";\nimport styles from \"./calendar.module.css\";\nimport dateFns from \"date-fns\";\n\nclass Calendar extends Component {\n    state = {\n        currentMonth: new Date(),\n        selectedDate: new Date()\n    };\n\n    renderHeader() {\n        const dateFormat = \"MMMM YYYY\";\n\n        return (\n            <div\n                className={[styles.header, styles.row, styles[\"flex-middle\"]].join(\" \")}\n            >\n                <div className={[styles.col, styles[\"col-start\"]].join(\" \")}>\n                    <div className={styles.icon} onClick={this.prevMonth}>\n                        chevron_left\n          </div>\n                </div>\n                <div className={[styles.col, styles[\"col-center\"]].join(\" \")}>\n                    <span>{dateFns.format(this.state.currentMonth, dateFormat)}</span>\n                </div>\n                <div className={[styles.col, styles[\"col-end\"]].join(\" \")}>\n                    <div className={styles.icon} onClick={this.nextMonth}>\n                        chevron_right\n          </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderDays() {\n        const dateFormat = \"dddd\";\n        const days = [];\n\n        let startDate = dateFns.startOfISOWeek(this.state.currentMonth);\n\n        for (let i = 0; i < 7; i++) {\n            days.push(\n                <div className={[styles.col, styles[\"col-center\"]].join(\" \")} key={i}>\n                    {dateFns.format(dateFns.addDays(startDate, i), dateFormat)}\n                </div>\n            );\n        }\n\n        return <div className={[styles.days, styles.row].join(\" \")}>{days}</div>;\n    }\n\n    getCellClasses(day, monthStart, selectedDate) {\n        let classes = [styles.col, styles.cell].join(\" \");\n\n        const classFromScoreType = this.getClassFromScoreType(day);\n\n        if (!dateFns.isSameMonth(day, monthStart) || dateFns.isAfter(day, new Date()) || dateFns.isBefore(day, dateFns.format(this.props.startDate)) || dateFns.isAfter(day, dateFns.format(this.props.endDate))) {\n            return [classes, styles.disabled].join(\" \");\n        }\n\n        if (dateFns.isSameDay(day, selectedDate)) {\n            classes = [classes, styles.selected].join(\" \");\n            if (classFromScoreType == null) {\n                return [classes, styles.calendar_empty].join(\" \")\n            }\n        }\n\n        return [classes, this.getClassFromScoreType(day)].join(\" \");\n    }\n\n    getClassFromScoreType(day) {\n        const formattedDate = this.GetDateString(day);\n\n        // console.log(\"formattedDate: \", formattedDate);\n\n        const filteredDaysFromProp = this.props.days.filter(dayItem => dayItem.date === formattedDate);\n\n        if (filteredDaysFromProp.length === 1) {\n            const dayFromProp = filteredDaysFromProp[0];\n            if (dayFromProp.freePass) {\n                return styles.calender_freePass;\n            }\n\n            if (dayFromProp.sick) {\n                return styles.calender_sick;\n            }\n\n            if (dayFromProp.recalledChallenge) {\n                return styles.calender_recalledChallenge;\n            }\n\n            if (dayFromProp.mandatoryChallenge && dayFromProp.extraChallenge) {\n                return styles.calender_mandatoryXtraChallenge;\n            }\n\n            if (dayFromProp.mandatoryChallenge || dayFromProp.extraChallenge) {\n                return styles.calender_failedChallenge;\n            }\n        }\n        return null;\n    }\n\n    GetDateString(shortDate) {\n        const date = new Date(shortDate);\n        const dateString = new Date(\n            date.getTime() - date.getTimezoneOffset() * 60000\n        )\n            .toISOString()\n            .split(\"T\")[0];\n        return dateString;\n    }\n\n    renderCells() {\n        const { currentMonth, selectedDate } = this.state;\n        const monthStart = dateFns.startOfMonth(currentMonth);\n        const monthEnd = dateFns.endOfMonth(monthStart);\n        const startDate = dateFns.startOfISOWeek(monthStart);\n        const endDate = dateFns.endOfISOWeek(monthEnd);\n\n        const dateFormat = \"D\";\n        const rows = [];\n\n        let days = [];\n        let day = startDate;\n        let formattedDate = \"\";\n\n        while (day <= endDate) {\n            for (let i = 0; i < 7; i++) {\n                formattedDate = dateFns.format(day, dateFormat);\n                const cloneDay = day;\n                days.push(\n                    <div\n                        className={this.getCellClasses(day, monthStart, selectedDate)}\n                        key={day}\n                        onClick={() => this.onDateClick(dateFns.parse(cloneDay))}\n                    >\n                        <span className={styles.number}>{formattedDate}</span>\n                        <span className={styles.bg}>{formattedDate}</span>\n                    </div>\n                );\n                day = dateFns.addDays(day, 1);\n            }\n            rows.push(\n                <div className={styles.row} key={day}>\n                    {days}\n                </div>\n            );\n            days = [];\n        }\n\n        return <div className={styles.body}>{rows}</div>;\n    }\n\n    onDateClick = day => {\n        this.setState({\n            selectedDate: day\n        });\n        this.props.onNavigateTo(day);\n    };\n\n    nextMonth = () => {\n        this.setState({\n            currentMonth: dateFns.addMonths(this.state.currentMonth, 1)\n        });\n    };\n\n    prevMonth = () => {\n        this.setState({\n            currentMonth: dateFns.subMonths(this.state.currentMonth, 1)\n        });\n    };\n\n    render() {\n        return (\n            <div className={styles.calendar}>\n                {this.renderHeader()}\n                {this.renderDays()}\n                {this.renderCells()}\n            </div>\n        );\n    }\n}\n\nexport default Calendar;\n","import React, { Component } from \"react\";\nimport Day from \"./day\";\nimport ScoreLabel from \"./scoreBadge\";\nimport Calendar from \"./calendar\";\nimport axios from \"axios\";\n\nclass User extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {\n        name: \"\",\n        days: []\n      }\n    };\n    const defaultDay = this.GetToday();\n    this.state.user.days.push(defaultDay);\n    this.state.dateToDisplay = defaultDay;\n  }\n\n  componentDidMount() {\n    if (!this.state.user._id) {\n      const userName = this.props.userName;\n      axios\n        .get(process.env.REACT_APP_API_URL + \"/user/name/\" + userName)\n        .then(response => {\n          // handle success\n          // // console.log(\"responseData: \", response.data);\n          let user = response.data;\n          user = this.RemoveUnnecessaryData(user);\n\n          this.setState({ user: user }, () => {\n            const defaultDay = this.GetToday();\n            this.setState({ dateToDisplay: defaultDay });\n          });\n          // console.log(\"state object from componentDidMount: \", this.state.user);\n          // console.log(\"componentDidMount day object: \", this.state.dateToDisplay);\n        })\n        .catch(err => {\n          // user does not exist and must be created.\n          let newUser = { ...this.state.user };\n          newUser.name = userName;\n          axios\n            .post(process.env.REACT_APP_API_URL + \"/user/add/\", newUser)\n            .then(res => {\n              newUser._id = res.data._id;\n              newUser.days[0]._id = res.data.day_id;\n              this.setState({ user: newUser });\n            })\n            .catch(err => {\n              // // console.log(\"error when creating new user: \", err)\n            });\n          // // console.log(\"error when fetching user: \", err);\n        });\n    }\n  }\n  // state = {};\n  RemoveUnnecessaryData(user) {\n    const days = user.days;\n    const necessaryDays = days.filter(day => {\n      console.log(\"loop of days: \",day.date);\n      const isNecessary = day.date >= process.env.REACT_APP_START_DATE && day.date <= process.env.REACT_APP_END_DATE;\n      return isNecessary;\n    });\n    console.log(\"necessaryDays: \", necessaryDays);\n    user.days = necessaryDays;\n    return user;\n  }\n\n  CountFreePassUsed() {\n    if (!this.state.user || !this.state.user.days) {\n      return 0;\n    }\n    const days = [...this.state.user.days];\n    const daysWithFreePass = days.filter(day => day.freePass === true);\n    return daysWithFreePass.length;\n  }\n\n  CountSickDays() {\n    if (!this.state.user || !this.state.user.days) {\n      return 0;\n    }\n    const days = [...this.state.user.days];\n    const sickDays = days.filter(day => day.sick === true);\n    return sickDays.length;\n  }\n\n  countMaxNumberOfRedStrokesUntilYesterday() {\n    if (!this.state.user || !this.state.user.days) {\n      return 0;\n    }\n    let NumberOfRedStrokes = 0;\n    let startDate = new Date(process.env.REACT_APP_START_DATE);\n    let selectedDate = new Date(this.state.dateToDisplay.date);\n    let millisecondsSinceBeginning = selectedDate - startDate;\n    if (millisecondsSinceBeginning > 0) {\n      NumberOfRedStrokes = (millisecondsSinceBeginning / (1000 * 60 * 60 * 24)) * 2;\n    }\n    console.log(NumberOfRedStrokes);\n    return NumberOfRedStrokes;\n  }\n\n\n  CountRedStrokesUntilYesterday() {\n    if (!this.state.user || !this.state.user.days) {\n      return 0;\n    }\n\n    const days = [...this.state.user.days];\n    let NumberOfRedStrokesUntilYesterday = this.countMaxNumberOfRedStrokesUntilYesterday();\n    for (let day of days) {\n      if (day.date < this.state.dateToDisplay.date) {\n        if (day.sick || day.freePass) {\n          NumberOfRedStrokesUntilYesterday -= 2;\n        }\n        if (day.mandatoryChallenge) {\n          NumberOfRedStrokesUntilYesterday -= 1;\n        }\n        if (day.extraChallenge) {\n          NumberOfRedStrokesUntilYesterday -= 1;\n        }\n        if (day.recalledChallenge) {\n          NumberOfRedStrokesUntilYesterday -= 1;\n        }\n      }\n    }\n    return NumberOfRedStrokesUntilYesterday;\n  }\n\n  CalculateTotalScore() {\n    if (!this.state.user || !this.state.user.days) {\n      return 0;\n    }\n    const days = [...this.state.user.days];\n    const reducer = (present, next) => present + next.dailyScore;\n    const totalScore = days.reduce(reducer, 0);\n    // // console.log(\"TotalScore: \", totalScore);\n    return totalScore;\n  }\n\n  HandleDailyScoreUpdate = newScore => {\n    // // console.log(\"newDailyScore: \", newScore);\n  };\n\n  HandleDayUpdate = updatedDay => {\n    // console.log(\"HandleDayUpdate: \", updatedDay);\n    this.setState({ dateToDisplay: updatedDay });\n\n    const existingDay = this.state.user.days.some(\n      day => day.date === updatedDay.date\n    );\n    // console.log(\"existing day: \", existingDay);\n    if (!existingDay) {\n      // new day\n      // // console.log(\"!existingDay && !updatedDay._id: \", !existingDay, updatedDay._id, (!existingDay || !updatedDay._id));\n      const user = { ...this.state.user };\n\n      axios\n        .post(process.env.REACT_APP_API_URL + \"/user/\" + user._id + \"/day/add\", updatedDay)\n        .then(res => {\n          updatedDay._id = res.data._id;\n          const days = [...this.state.user.days, updatedDay];\n          user.days = days;\n          this.setState({ user }, () => {\n            this.CalculateTotalScore();\n          });\n        });\n    } else {\n      // existing day\n      const user = { ...this.state.user };\n\n      axios\n        .post(\n          process.env.REACT_APP_API_URL + \"/user/update/\" +\n          user._id +\n          \"/day/\" +\n          updatedDay._id,\n          updatedDay\n        )\n        .then(res => {\n          const days = [...this.state.user.days];\n          const index = this.state.user.days.findIndex(\n            day => day.date === updatedDay.date\n          );\n          // // console.log(\"index of existing day\", index);\n          days[index] = updatedDay;\n\n          user.days = days;\n          this.setState({ user }, () => {\n            this.CalculateTotalScore();\n          });\n        });\n    }\n  };\n\n  HandleNavigateTo = date => {\n    // // console.log(\"Date to navigate to: \", date);\n    const dayToDisplay = this.GetDay(date);\n    this.setState({ dateToDisplay: dayToDisplay });\n  };\n\n  HandleCalendarClassnames = tile => {\n    if (tile.view === \"month\") {\n      const day = this.GetDay(tile.date);\n      if (day.freePass) {\n        return \"freePassTile\";\n      }\n      if (day.sick) {\n        return \"sickTile\";\n      }\n      if (day.recalledChallenge) {\n        return \"recalledChallengeTile\";\n      }\n\n      if (day.mandatoryChallenge && day.extraChallenge) {\n        return \"regularTile\";\n      }\n\n      return \"redDayTile\";\n    }\n\n    return null;\n  };\n\n  GetToday() {\n    const today = new Date();\n    const endDate = new Date(process.env.REACT_APP_END_DATE);\n    if (endDate < today) {\n      return this.GetDay(endDate);\n    }\n    return this.GetDay(today);\n  }\n\n  GetDay(date) {\n    const dateString = this.GetDateString(date);\n    let day = [];\n    // console.log(\"GetDay(date): \", date, this.state, this.state.user, this.state.user.days, (!this.state && !this.state.user && !this.state.user.days));\n    // console.log(\"this.state: \", this.state, this.state != null);\n    // console.log(\"this.state.user: \", this.state.user, this.state.user != null);\n    // console.log(\"this.state.user.days: \", this.state.user.days, this.state.user.days != null);\n    // console.log(\"should look for a match in array: \", this.state != null && this.state.user != null && this.state.user.days != null);\n    if (\n      this.state != null &&\n      this.state.user != null &&\n      this.state.user.days != null\n    ) {\n      day = this.state.user.days.filter(day => day.date === dateString);\n    }\n\n    if (day.length === 0) {\n      return {\n        date: dateString,\n        dailyScore: 0,\n        freePass: false,\n        mandatoryChallenge: false,\n        extraChallenge: false,\n        recalledChallenge: false\n      };\n    }\n\n    return { ...day[0] };\n  }\n\n  GetDateString(shortDate) {\n    const date = new Date(shortDate);\n    const dateString = new Date(\n      date.getTime() - date.getTimezoneOffset() * 60000\n    )\n      .toISOString()\n      .split(\"T\")[0];\n    return dateString;\n  }\n\n  render() {\n    console.log(\"state at render: \", this.state);\n\n    return (\n      <span>\n        <a href=\"/\">\n          <button type=\"button\" className=\"btn btn-primary\" style={{ width: '75%' }}>\n            <span className=\"display-5\">Home</span>\n          </button>\n        </a>\n        <h2>{this.props.userName}</h2>\n        <Day\n          OnDailyScoreUpdate={this.HandleDailyScoreUpdate}\n          OnDayUpdate={this.HandleDayUpdate}\n          day={this.state.dateToDisplay}\n          redStrokesExist={this.CountRedStrokesUntilYesterday() > 0}\n        />\n        <ScoreLabel\n          scoreLabel={\"Total score \"}\n          score={this.CalculateTotalScore()}\n        />\n        <ScoreLabel\n          scoreLabel={\"Free pass used \"}\n          score={this.CountFreePassUsed()}\n        />\n        <ScoreLabel\n          scoreLabel={\"Sick days \"}\n          score={this.CountSickDays()}\n        />\n        <ScoreLabel\n          scoreLabel={\"Red strokes \"}\n          score={this.CountRedStrokesUntilYesterday()}\n        />\n        <Calendar\n          onNavigateTo={this.HandleNavigateTo}\n          days={\n            !this.state.user || !this.state.user.days\n              ? []\n              : this.state.user.days\n          }\n          startDate={process.env.REACT_APP_START_DATE}\n          endDate={process.env.REACT_APP_END_DATE}\n        />\n      </span>\n    );\n  }\n}\n\nexport default User;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from 'react-router-dom';\n\nclass Users extends Component {\n  state = {\n    users: [],\n    inputValue: ''\n  };\n\n  componentDidMount() {\n    axios\n      .get(process.env.REACT_APP_API_URL + '/user')\n      .then(res => {\n        const users = res.data;\n        let existingUsers = [];\n        console.log(users);\n        users.map(user => existingUsers.push({ name: user.name, totalScore: this.CalculateTotalScore(user), redStrokes: this.CountRedStrokesUntilYesterday(user) }));\n        existingUsers.sort((a, b) => (a.redStrokes > b.redStrokes) ? 1 : -1);\n        this.setState({ users: existingUsers }, () => {\n          console.log(\"state: \", this.state);\n        });\n      })\n      .catch(err => {\n        console.log(\"error while fetching users. \", err);\n      });\n  }\n\n  CalculateTotalScore(user) {\n    if (user == null || user.days == null) {\n      return 0;\n    }\n    user = this.RemoveUnnecessaryData(user);\n    const days = [...user.days];\n    const reducer = (present, next) => present + next.dailyScore;\n    const totalScore = days.reduce(reducer, 0);\n    // // console.log(\"TotalScore: \", totalScore);\n    return totalScore;\n  }\n\n  RemoveUnnecessaryData(user) {\n    const days = user.days;\n    const necessaryDays = days.filter(day => {\n      console.log(\"loop of days: \",day.date);\n      const isNecessary = day.date >= process.env.REACT_APP_START_DATE && day.date <= process.env.REACT_APP_END_DATE;\n      return isNecessary;\n    });\n    console.log(\"necessaryDays: \", necessaryDays);\n    user.days = necessaryDays;\n    return user;\n  }\n\n  countMaxNumberOfRedStrokesUntilYesterday() {\n\n    let NumberOfRedStrokes = 0;\n    let startDate = new Date(process.env.REACT_APP_START_DATE);\n    let endDate = new Date(process.env.REACT_APP_END_DATE);\n    let selectedDate = new Date(this.GetTodayAsString());\n    if (endDate < selectedDate) {\n      selectedDate = endDate;\n    }\n    let millisecondsSinceBeginning = selectedDate - startDate;\n    if (millisecondsSinceBeginning > 0) {\n      NumberOfRedStrokes = (millisecondsSinceBeginning / (1000 * 60 * 60 * 24)) * 2;\n    }\n    console.log(\"MaxNumberOfRedStrokes: \", NumberOfRedStrokes);\n    return NumberOfRedStrokes;\n  }\n\n\n  CountRedStrokesUntilYesterday(user) {\n    if (user == null || user.days == null) {\n      return 0;\n    }\n    const todayAsString = this.GetTodayAsString();\n    const days = [...user.days];\n    let NumberOfRedStrokesUntilYesterday = this.countMaxNumberOfRedStrokesUntilYesterday();\n    for (let day of days) {\n      if (day.date < todayAsString) {\n        if (day.sick || day.freePass) {\n          NumberOfRedStrokesUntilYesterday -= 2;\n        }\n        if (day.mandatoryChallenge) {\n          NumberOfRedStrokesUntilYesterday -= 1;\n        }\n        if (day.extraChallenge) {\n          NumberOfRedStrokesUntilYesterday -= 1;\n        }\n        if (day.recalledChallenge) {\n          NumberOfRedStrokesUntilYesterday -= 1;\n        }\n      }\n    }\n    return NumberOfRedStrokesUntilYesterday;\n  }\n\n  GetTodayAsString() {\n    const date = new Date();\n    const dateString = new Date(\n      date.getTime() - date.getTimezoneOffset() * 60000\n    )\n      .toISOString()\n      .split(\"T\")[0];\n    return dateString;\n  }\n\n  GetPlaceIcon(arrayIndex) {\n\n    const arrayLength = this.state.users.length;\n\n    if (arrayIndex === 0) {\n      return \"btn btn-primary p-3 ranking-image firstPlace\";\n    }\n    if (arrayLength - arrayIndex === 1) {\n      return \"btn btn-primary p-3 ranking-image lastPlace\";\n    }\n    return \"btn btn-primary p-3 ranking-image inbetween\";\n  }\n\n\n  handleChange = event => {\n    this.setState({ inputValue: event.target.value });\n  }\n\n  handleSubmit = event => {\n    console.log(\"new user: \", this.state.inputValue);\n    event.preventDefault();\n    this.props.history.push('/' + this.state.inputValue);\n  }\n\n  handleUserClicked = (userName, event) => {\n    event.preventDefault();\n    console.log(\"handleUserClicked: \", userName);\n    this.props.history.push('/' + userName);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.users.map((user, index) => (\n          <div className=\"row mt-2\" key={user.name}>\n            <div className=\"col\" >\n              <button type=\"button\" onClick={(e) => this.handleUserClicked(user.name, e)} className={this.GetPlaceIcon(index)} style={{ width: '75%' }}>\n                <span className=\"display-5\">\n                  {user.name} <span className=\"badge badge-light pull-right\">{user.redStrokes}</span>\n                </span>\n              </button>\n            </div>\n          </div>\n        ))}\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"row mt-5\">\n            <div className=\"col\">\n              <input type=\"text\" value={this.state.value} onChange={this.handleChange} style={{ width: '75%' }} />\n            </div>\n          </div>\n          <div className=\"row mt-2\">\n            <div className=\"col\">\n              <input type=\"submit\" className=\"btn btn-primary p-3\" value=\"add new user\" style={{ width: '75%' }}></input>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Users);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport User from \"./components/user\";\nimport Users from \"./components/users\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass App extends Component {\n  specificUser = path => {\n    return <User userName={path.match.params.name} />;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Container\">\n          <Router>\n            <Route path=\"/\" exact component={Users} />\n            <Route path=\"/:name\" component={this.specificUser} />\n          </Router>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"./colorPalette.css\";\nimport \"./Utmaningen.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"calendar_icon__2R4bc\",\"logo\":\"calendar_logo__1Tgfb\",\"row\":\"calendar_row__3_Iwv\",\"row-middle\":\"calendar_row-middle__gLsSA\",\"col\":\"calendar_col__1feYn\",\"col-start\":\"calendar_col-start__1j3IE\",\"col-center\":\"calendar_col-center__3r66u\",\"col-end\":\"calendar_col-end__1r1iA\",\"calendar\":\"calendar_calendar__A6LCr\",\"header\":\"calendar_header__1Wtzt\",\"days\":\"calendar_days__36-YE\",\"body\":\"calendar_body__14cnp\",\"cell\":\"calendar_cell__3rrCh\",\"calendar_empty\":\"calendar_calendar_empty__Zt3vN\",\"calender_sick\":\"calendar_calender_sick__tYqdh\",\"calender_freePass\":\"calendar_calender_freePass__3xCu8\",\"calender_mandatoryXtraChallenge\":\"calendar_calender_mandatoryXtraChallenge__1FGTH\",\"calender_recalledChallenge\":\"calendar_calender_recalledChallenge__1j12M\",\"calender_failedChallenge\":\"calendar_calender_failedChallenge__20n7s\",\"number\":\"calendar_number__1J0J1\",\"disabled\":\"calendar_disabled__1tFic\",\"bg\":\"calendar_bg__2Iuzl\",\"selected\":\"calendar_selected__1rClF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"freePassButton_btn__3Ane3 bootstrap_btn__1hJkr\",\"btn_secondary\":\"freePassButton_btn_secondary__1pdrg bootstrap_btn__1hJkr undefined undefined bootstrap_btn-secondary__qTcfy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"sickButton_btn__hbVZP bootstrap_btn__1hJkr\",\"btn_secondary\":\"sickButton_btn_secondary__30j0Q bootstrap_btn__1hJkr undefined undefined bootstrap_btn-secondary__qTcfy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"extraChallengeButton_btn__3hwTw bootstrap_btn__1hJkr\",\"btn_secondary\":\"extraChallengeButton_btn_secondary__2wPGe bootstrap_btn__1hJkr undefined undefined bootstrap_btn-secondary__qTcfy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"mandatoryChallengeButton_btn__bCb2J bootstrap_btn__1hJkr\",\"btn_secondary\":\"mandatoryChallengeButton_btn_secondary__SNa02 bootstrap_btn__1hJkr undefined undefined bootstrap_btn-secondary__qTcfy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"recalledChallengeButton_btn__2p5Ni bootstrap_btn__1hJkr\",\"btn_secondary\":\"recalledChallengeButton_btn_secondary__37IrM bootstrap_btn__1hJkr undefined undefined bootstrap_btn-secondary__qTcfy\"};"],"sourceRoot":""}